<?xml version="1.0"?>
<launch>
  <arg name="mav_name"            default="slammer"/>
  <arg name="color"               default="White"/>
  <arg name="x"                   default="0"/>
  <arg name="y"                   default="0"/>
  <arg name="z"                   default="0.1"/>
  <arg name="yaw"                 default="0"/>
  <arg name="debug"               default="false"/>
  <arg name="boat_name"               default="aruco"/>
  <arg name="show" default="true" />

  <!-- Start Simulator -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find EKF-SLAM)/worlds/cave.world"/>
    <arg name="paused" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="verbose" value="false"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Spawn Model in Gazebo -->
  <include file="$(find EKF-SLAM)/launch/two_mav_spawn.launch">
    <arg name="mav_name"            value="$(arg mav_name)" />
    <arg name="model"               value="$(find EKF-SLAM)/agents/$(arg mav_name)/$(arg mav_name).xacro" />
    <arg name="x"                   value="$(arg x)"/>
    <arg name="y"                   value="$(arg y)"/>
    <arg name="z"                   value="$(arg z)"/>
		<arg name="x2"                   value="0"/>
    <arg name="y2"                   value="0"/>
    <arg name="z2"                   value="0"/>
    <arg name="yaw"                 value="$(arg yaw)"/>
    <arg name="color"               value="$(arg color)"/>
    <arg name="boat_name"            value="aruco" />
    <arg name="model2"               value="$(find EKF-SLAM)/agents/$(arg boat_name)/$(arg boat_name)_only.xacro" />
  </include>

  <!-- Controller -->
  <group ns="$(arg mav_name)">

    <!-- Load common parameters -->
    <rosparam command="load" file="$(find EKF-SLAM)/agents/$(arg mav_name)/$(arg mav_name).yaml"/>

    <!-- Is Flying Publisher -->
    <node pkg="rostopic" type="rostopic" name="is_flying_pub" args="pub is_flying std_msgs/Bool true"/>

    <!-- Status Publisher -->
    <node pkg="rostopic" type="rostopic" name="status_pub" args="pub -r 1 status rosflight_msgs/Status '{armed: true, failsafe: false, rc_override: false, offboard: true, error_code: 0, num_errors: 0, loop_time_us: 1}'"/>

    <!-- State Estimator -->
    <!-- <node pkg="roscopter" type="mekf" name="mekf" output="screen">
      <remap from="baro" to="baro/data"/>
      <remap from="sonar" to="sonar/data"/>
      <remap from="magnetometer" to="mag/data"/>
    </node> -->

    <!-- PID Position Controller -->
    <node name="controller" pkg="roscopter" type="controller">
      <remap from="estimate" to="ground_truth/odometry/NED"/>
      <!-- <remap from="estimate" to="estimate"/> -->
    </node>

    <!-- Waypoint Manager -->
    <node name="waypoint_manager" pkg="roscopter" type="waypoint_manager.py" output="screen">
      <remap from="waypoint" to="high_level_command"/>
      <remap from="state" to="ground_truth/odometry/NED"/>
      <!-- <remap from="state" to="estimate"/> -->
    </node>

    <!-- plot states -->
    <node pkg="roscopter" type="states_plotter.py" name="states_plotter" output="screen">
      <param name="time_window" value="10.0"/>
    </node>

  </group>

  <!-- ArUco Detectors -->
  <node pkg="aruco_localization" type="aruco_localization" name="aruco">
    <param name="show_output_video" value="$(arg show)" />
    <param name="markermap_config" value="$(find EKF-SLAM)/params/aruco_all.yaml" />
    <param name="marker_size" value="0.1760" />
    <!-- <param name="marker_size" value="0.7071" /> -->

    <param name="debug_save_input_frames" value="false" />
    <param name="debug_save_output_frames" value="false" />
    <param name="debug_image_path" value="/tmp/arucoimages" />

    <remap from="input_image" to="/slammer/camera/rgb" />
    <remap from="output_image" to="aruco/image" />
  </node>



</launch>
