<?xml version="1.0"?>
<launch>
  <arg name="mav_name"            default="multirotor"/>
  <arg name="color"               default="White"/>
  <arg name="x"                   default="0"/>
  <arg name="y"                   default="0"/>
  <arg name="z"                   default="0.1"/>
  <arg name="yaw"                 default="0"/>
  <arg name="debug"               default="false"/>
  <arg name="boat_name"               default="aruco"/>

  <!-- Start Simulator -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find EKF-SLAM)/worlds/cave.world"/>
    <arg name="paused" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="verbose" value="false"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Spawn Model in Gazebo -->
  <include file="$(find EKF-SLAM)/launch/two_mav_spawn.launch">
    <arg name="mav_name"            value="$(arg mav_name)" />
    <arg name="model"               value="$(find roscopter_sim)/xacro/$(arg mav_name).urdf.xacro" />
    <arg name="x"                   value="$(arg x)"/>
    <arg name="y"                   value="$(arg y)"/>
    <arg name="z"                   value="$(arg z)"/>
		<arg name="x2"                   value="0"/>
    <arg name="y2"                   value="0"/>
    <arg name="z2"                   value="0"/>
    <arg name="yaw"                 value="$(arg yaw)"/>
    <arg name="color"               value="$(arg color)"/>
    <arg name="boat_name"            value="aruco" />
    <arg name="model2"               value="$(find EKF-SLAM)/agents/$(arg boat_name)/$(arg boat_name)_only.xacro" />
  </include>

  <!-- Controller -->
  <group ns="$(arg mav_name)">

    <!-- Load common parameters -->
    <rosparam command="load" file="$(find roscopter_sim)/params/$(arg mav_name).yaml"/>

    <!-- Is Flying Publisher -->
    <node pkg="rostopic" type="rostopic" name="is_flying_pub" args="pub is_flying std_msgs/Bool true"/>

    <!-- Status Publisher -->
    <node pkg="rostopic" type="rostopic" name="status_pub" args="pub -r 1 status rosflight_msgs/Status '{armed: true, failsafe: false, rc_override: false, offboard: true, error_code: 0, num_errors: 0, loop_time_us: 1}'"/>

    <!-- State Estimator -->
    <node pkg="roscopter" type="mekf" name="mekf" output="screen">
      <remap from="baro" to="baro/data"/>
      <remap from="sonar" to="sonar/data"/>
      <remap from="magnetometer" to="mag/data"/>
    </node>

    <!-- PID Position Controller -->
    <node name="controller" pkg="roscopter" type="controller">
      <!-- <remap from="estimate" to="ground_truth/odometry/NED"/> -->
      <remap from="estimate" to="estimate"/>
    </node>

    <!-- Waypoint Manager -->
    <node name="waypoint_manager" pkg="roscopter" type="waypoint_manager.py" output="screen">
      <remap from="waypoint" to="high_level_command"/>
      <!-- <remap from="state" to="ground_truth/odometry/NED"/> -->
      <remap from="state" to="estimate"/>
    </node>

    <!-- plot states -->
    <node pkg="roscopter" type="states_plotter.py" name="states_plotter" output="screen">
      <param name="time_window" value="10.0"/>
    </node>

  </group>

</launch>
